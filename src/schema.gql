
union FSNode = Directory | File

type Directory {
  name: String
  path: String
#  parent: Directory
#  contents: [FSNode]
#  subdirectories: [Directory]
#  files: [File]
}

type File {
  name: String
  path: String
#  directory: Directory
  createdAt: String
  owner: String
  group: String
#  permissions: PermissionSet
  content: String
  size: Int
}

#type PermissionSet {
#  user: Permission
#  group: Permission
#  other: Permission
#}

type Permission {
  read: Boolean
  write: Boolean
  execute: Boolean
}

type Query {
  file(path: String): File
#  dir(path: String): Directory
}

#type Mutation {
#  createFile(dirPath: String!, name: String!, content: String!): File
#  updateFile(filePath: String!, newContent: String!): File
#  deleteFile(filePath: String!): Boolean

#  mkdir(dirPath: String!, name: String!): Directory
#  rmdir(dirPath: String!): Boolean
#}

schema {
  query: Query
#  mutation: Mutation
}

